using System.Linq;
using System;
using Microsoft.WindowsAzure.Storage;


public static TextInfoTableEntity Run(string myBlob, string id, TraceWriter log)
{
    log.Info($"C# Blob trigger function Processed blob\n Name:{id} \n Text: {myBlob}");
    
    var stats = GetStats(myBlob);

    return new TextInfoTableEntity() {
        RowKey = id,
        PartitionKey = "text",
        WordCount = stats.WordCount, 
        UniqueWords = stats.UniqueWords,
        Complexity = stats.Complexity
    };

}

public class TextInfoTableEntity
{
    public string RowKey { get; set; }
    public string PartitionKey { get; set; }
    public int WordCount { get; set; }
    public int UniqueWords { get; set; }
    public int Complexity { get; set; }
}

public static TextStats GetStats(string text) {
    var words = text
        .Replace("\r\n", " ")
        .Replace(".", string.Empty)
        .Replace("!", string.Empty)
        .Replace(",", string.Empty)
        .Replace("-", string.Empty)
        .Replace(":", string.Empty)
        .Split(' ');

    var wordCount = words.Count();
    var uniqueWords = words.Distinct().Count();
    var complexity = (int)(wordCount / 100) + (uniqueWords / 10);

    return new TextStats() {
        WordCount = wordCount,
        UniqueWords = uniqueWords,
        Complexity = complexity
    };
}

public class TextStats {
    public int WordCount { get; set; }
    public int UniqueWords { get; set; }
    public int Complexity { get; set; }
}
